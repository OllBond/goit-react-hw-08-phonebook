{"version":3,"file":"static/js/325.98f81e07.chunk.js","mappings":"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","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","webpack://react-homework-template/./src/components/LoginForm/loginForm.module.css?9d59","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginForm_form__Y03VC\"};","import TextField from 'shared/components/TextField/TextField';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\nimport Button from 'shared/components/Button/Button';\n\nimport css from '../LoginForm/loginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <TextField value={email} onChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        onChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Login</Button>\n    </form>\n  );\n};\nexport default LoginForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { login } from '../../redux/auth/auth-operations';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { isUserLogin } from '../../redux/auth/auth-selectors';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import css from '../Button/button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={css.btn}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__50VcK\",\"field\":\"textField_field__38YRA\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from '../TextField/textField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor=\"id\">{label}</label>\n      <input className={css.field} id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n"],"names":["email","password","type","name","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","css","TextField","value","onChange","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login","children","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","useState","setState","useCallback","prevState","e","preventDefault"],"sourceRoot":""}